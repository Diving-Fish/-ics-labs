# Written by Dai Fangyue, 517030910129
main:
    irmovq Stack, %rsp
    irmovq ele1, %rdi
    call rsum_list
    halt

rsum_list:
    pushq %rcx
    xorq %rax, %rax
loop:
    andq %rdi, %rdi
    je break
    mrmovq (%rdi), %rcx
    mrmovq 8(%rdi), %rbx
    rrmovq %rbx, %rdi
    call rsum_list
    addq %rcx, %rax
return:
    popq %rcx
    ret
break:
    xorq %rax, %rax
    jmp return

# Sample linked list
    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

    .pos 0x200
Stack:
